VDP SPRITES MSX ROM SDCC Library (fR3eL Project)

Version: v1.1 (2/02/2017)
Author: mvac7 [mvac7303b@gmail.com]
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C and Z80 assembler


History of versions:
- v1.1 (2/02/2017) current version
- v1.0 (?)


 
>>> Warning!: Document pending correction. <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


--------------------------------------------------------------------------------
Index:

1 Introduction
2 Acknowledgments
3 Requirements
4 Functions
  4.1  ClearSprites
  4.2  PUTSPRITE
  4.3  SetSpritePattern
  4.4  SetSpriteColor
  4.5  SetSpritePosition
  4.6  SetSpriteVisible
  4.7  SetEarlyClock
  4.8 UnsetEarlyClock
   

   
--------------------------------------------------------------------------------
1 Introduction

Open Source library with functions to directly access to sprites of the 
TMS9918A.

Provides a set of functions for displaying Sprites, both fully (PUTSPRITE) and 
specific (positioning, color, pattern, visibility and EarlyClock).

Contains the PUTSPRITE function similar to that of MSX BASIC.

Allows you to work with in G3 screen mode (V9938), but color cannot be assigned. 
I require that we write the colors of the 8/16 lines of each sprite plane in the 
Sprite Color Table (VRAM 1C00h). The same will happen, for the Early Clock 
attribute. The functions of this library will not take effect. Bit 7 (EC) must 
be modified for each line of the sprite plane of the same color table. 
More information in the 9938 Technical Data Book
                        http://map.grauw.nl/resources/video/v9938/v9938.xhtml

It is complemented with the VDP TMS9918A MSX ROM Library, necessary for the 
initialization of the screen (screen and sprites mode).

It uses the functions from the MSX BIOS, so it is designed to create 
applications in ROM format.
  
Use them for developing MSX applications using Small Device C Compiler (SDCC) 
cross compiler.

In the source code (\examples), you can find applications for testing and 
learning purposes.

This library is part of the MSX fR3eL Project
      https://github.com/mvac7/SDCC_MSX_fR3eL

Enjoy it!



About the Sprite libraries:

I'm developing several libraries for the management of MSX Sprites, both for 
the creation of ROMs (using the BIOS), and MSX-DOS executables.
They are designed for the development of applications for the first generation 
of MSX but some of the variations are directed in how certain functions behave 
when using the G3 mode of the video processor V9938 and thus be able to take 
advantage of it, when it is executed in a MSX2 or higher.

The projected libraries are the following:
- SPRITES Small (https://github.com/mvac7/SDCC_VDP_SPRITES_S_MSXROM_Lib) - 
  Basic functions for managing Sprites. It is more compact so it takes up less 
  space in our application.

- SPRITES (https://github.com/mvac7/SDCC_VDP_SPRITES_MSXROM_Lib) - 
  It includes the same functions as the Small version and adds to access 
  specific parameters (positioning, color, pattern, visibility and EarlyClock).

- SPRITES 1/2 (https://github.com/mvac7/SDCC_VDP_SPRITES_12_MSXROM_Lib) - 
  Same as SPRITES but in the G3 screen mode (V9938), it treats the color 
  parameters in a simplified way. Assign the color parameters and EarlyClock to 
  all the lines of the Sprites.

- SPRITES DUMP (In development) - Uses a buffer in RAM that has to be dumped in 
  each interruption. Includes a Sprite Flicker, to allow viewing up to 8 sprites 
  per line.

To optimize our development, I recommend building your library with only those 
functions you need.

I have yet to develop a library to work with the multi-colored Sprites of the 
V9938.

                             
                                                          
--------------------------------------------------------------------------------
2 Acknowledgments

I want to give a special thanks to all those who freely share their knowledge 
with the MSX developer community.

* Avelino Herrera > http://msx.atlantes.org/index_es.html
* Nerlaska > http://albertodehoyonebot.blogspot.com.es
* Marq/Lieves!Tuore > http://www.kameli.net/marq/  http://www.kameli.net/lt/
* Fubukimaru https://github.com/Fubukimaru http://www.gamerachan.org/fubu/
* Andrear > http://andrear.altervista.org/home/msxsoftware.php
* Ramones > https://www.msxblog.es/tutoriales-de-programacion-en-ensamblador-ramones/
            MSXbanzai http://msxbanzai.tni.nl/dev/faq.html
* Sapphire/Z80ST > http://z80st.auic.es/
* Fernando García > https://www.youtube.com/user/bitvision
* Eric Boez > https://github.com/ericb59
* MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
* Portar MSX Tech Doc > http://nocash.emubase.de/portar.htm
* MSX Resource Center > http://www.msx.org/
* Karoshi MSX Community (RIP 2007-2020)
* BlueMSX emulator > http://www.bluemsx.com/
* OpenMSX emulator > http://openmsx.sourceforge.net/
* Meisei emulator > ?
 

 
--------------------------------------------------------------------------------
3 Requirements:

  * Small Device C Compiler (SDCC) v3.9 
    http://sdcc.sourceforge.net/
  
  * Hex2bin v2.5 
    http://hex2bin.sourceforge.net/ 

  * VDP TMS9918A MSX ROM Library
    https://github.com/mvac7/SDCC_VDP_TMS9918A_MSXROM_Lib
   


--------------------------------------------------------------------------------
4 Functions


================================================================================
4.1 ClearSprites

 Function : 
            void ClearSprites()
             
 Description:
            Initialises all sprite data.
            
 Input    : -
 
 Output   : -
 
 Examples :
            ClearSprites();



================================================================================
4.2 PUTSPRITE

 Function :
            void PUTSPRITE(char plane, char x, char y, char color, char pattern)
                             
 Description:
            Displays the sprite pattern.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] x 
            [char] y
            [char] color (0-15)
            [char] pattern
            
 Output   : -
 
 Examples :
            PUTSPRITE(4, 100, 80, 6, 2);
            
            PUTSPRITE(0, X, Y, WHITE, 10);  //Color label requires include a VDP_TMS9918A.h



================================================================================
4.3 SetSpritePattern

 Function :
            void SetSpritePattern(char plane, char pattern)
             
 Description:
            Assign a pattern to a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] pattern
                     
 Output   : -
 
 Examples :
            SetSpritePattern(4, 2);
            
            SetSpritePattern(7, i);



================================================================================
4.4 SetSpriteColor

 Function :
            void SetSpriteColor(char plane, char color)
               
 Description:
            Assign a color to a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] color (0-15)
                     
 Output   : -
 
 Examples :
            SetSpriteColor(4, 6);
            
            SetSpriteColor(7, DARK_RED); //Color label requires include a VDP_TMS9918A.h



================================================================================
4.5 SetSpritePosition

 Function :
            void SetSpritePosition(char plane, char x, char y)
                          
 Description:
            Assigns the position coordinates of a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [char] x 
            [char] y
                       
 Output   : -
 
 Examples :
            SetSpritePosition(4, 100, 80);



================================================================================
4.6 SetSpriteVisible

 Function :
            void SetSpriteVisible(char plane, boolean state)
                          
 Description:
            Hides or shows a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31) 
            [boolean] visible state
                      
 Output   : -
 
 Examples :
            SetSpriteVisible(4,false);



================================================================================
4.7 SetEarlyClock

 Function :
            void SetEarlyClock(char plane)
                          
 Description:
            Apply the Early Clock of a sprite plane. Move 32 points to the left           
            the X position of the sprite.
            
 Input    : 
            [char] sprite plane (0-31) 
                      
 Output   : -
 
 Examples :
            SetEarlyClock(10);
 
 
================================================================================
4.8 UnsetEarlyClock

 Function :
            void UnsetEarlyClock(char plane)
                          
 Description:
            Disables the Early Clock. Restore the position of a sprite plane.
            
 Input    : 
            [char] sprite plane (0-31)
                      
 Output   : -
 
 Examples :
            UnsetEarlyClock(10);
 
 
--------------------------------------------------------------------------------